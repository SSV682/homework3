apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "billingservice.fullname" . }}
  labels:
    {{- include "billingservice.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "billingservice.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "billingservice.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "billingservice.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: check-db-ready
          image: postgres:latest
          ports:
            - containerPort: 5432
          command:
            - sh
            - '-c'
            - >
              until pg_isready -h postgres -p 5432; do echo waiting for database; sleep 2; done;
        - name: check-kafka-ready
          image: docker.io/bitnami/kafka:3.4.0-debian-11-r11
          command:
            - /bin/bash
          args:
            - "-ec"
            - |
              echo "start sleep"
              sleep 30;

              echo "Waiting wake up kafka";
              wait-for-port --host=kafka --timeout=180 9092;
              echo "Kafka is available";
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
           {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          envFrom:
            - secretRef:
                name: user-service-secrets
            - configMapRef:
                name: user-service-configmap
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
