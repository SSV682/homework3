version: '3.9'
services:
  db:
    container_name: postgres
    image: postgres:14.5
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_NAME=homework
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
#    volumes:
#      - db:/var/lib/postgresql/data
#      - ./migrations/db/20221015205029_migration.up.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - home_net

  userService:
    build:
      dockerfile: ./user-service/Dockerfile
      context: ./
    container_name: user-service
    image: ssv682/user-service:v0.3
    ports:
      - "8000:8000"
    depends_on:
      - db
    networks:
      - home_net
    links:
      - authService

  authService:
    build: ./auth-service
    container_name: auth-service
    image: ssv682/auth-service:v0.1
    ports:
      - "8001:8000"
    depends_on:
      - db
    networks:
      - home_net

  orderService:
    build: ./order-service
    container_name: order-service
    image: ssv682/order-service:v0.1
    ports:
      - "8002:8000"
    depends_on:
      - db
      - redis
    networks:
      - home_net

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    networks:
      - home_net
    depends_on:
      - userService

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    networks:
      - home_net
    depends_on:
      - userService

  redis:
    image: redis:6.2-alpine
    container_name: redis
    ports:
      - '6379:6379'
    networks:
      - home_net

  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SASL_ENABLED: "false"
    networks:
      - home_net

  kafka:
    image: confluentinc/cp-kafka:7.2.1
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
#      KAFKA_ADVERTISED_LISTENERS: SASL_PLAINTEXT://localhost:9092
#      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/kafka_server_jaas.conf"
#      KAFKA_INTER_BROKER_LISTENER_NAME: 'SASL_PLAINTEXT'
#      KAFKA_SASL_ENABLED_MECHANISMS: 'PLAIN'
#      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: 'PLAIN'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      ZOOKEEPER_SASL_ENABLED: "false"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
#      - ./dev/volumes/kafka/server_jaas.conf:/etc/kafka/kafka_server_jaas.conf
#      - ./dev/volumes/kafka/consumer.properties:/etc/kafka/consumer.properties
#      - ./dev/volumes/kafka/producer.properties:/etc/kafka/producer.properties
    networks:
      - home_net

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
#      KAFKA_CLUSTERS_0_NAME: local
#      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: localhost:9092
#      KAFKA_CLUSTERS_0_PROPERTIES_SECURITY_PROTOCOL: PLAINTEXT
#      KAFKA_CLUSTERS_0_PROPERTIES_SASL_MECHANISM: PLAIN
#      KAFKA_CLUSTERS_0_PROPERTIES_SASL_JAAS_CONFIG: 'org.apache.kafka.common.security.plain.PlainLoginModule required username="alice" password="alice-secret";'
    networks:
      - home_net

networks:
  home_net:
    driver: bridge

volumes:
  db:
